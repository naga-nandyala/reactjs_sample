name: Azure OIDC Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  workflow_dispatch:

permissions:
  id-token: write # Required for OIDC
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Azure login with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
 
    - name: Get ACR access token
      id: get-acr-token
      run: |
        ACR_TOKEN=$(az acr login --name naganreactjsacr --expose-token --query accessToken -o tsv)
        echo "::add-mask::$ACR_TOKEN"
        echo "token=$ACR_TOKEN" >> $GITHUB_OUTPUT
    
    - name: Login to ACR with token
      uses: docker/login-action@v3
      with:
        registry: naganreactjsacr.azurecr.io
        username: 00000000-0000-0000-0000-000000000000
        password: ${{ steps.get-acr-token.outputs.token }}
    
    - name: Get all secrets from Key Vault
      id: get-secrets
      run: |
        # Create a .env file for build arguments
        touch .env.build
        
        # Get all secrets from the Key Vault and add them to the .env file
        SECRET_NAMES=$(az keyvault secret list --vault-name "kvnaganreactjs1" --query "[].name" -o tsv)
        
        # Define the list of secrets you want to retrieve
        # SECRETS=("REACT-APP-EXAMPLE" "REACT-APP-API-URL" "REACT-APP-FEATURE-FLAGS")
        SECRETS=("REACT-APP-EXAMPLE")

        # Process each predefined secret
        for SECRET_NAME in "${SECRETS[@]}"; do
        # Convert hyphenated Key Vault name format to underscore format for React
        ENV_NAME=$(echo $SECRET_NAME | tr '-' '_')
        
        # Get the secret value
        SECRET_VALUE=$(az keyvault secret show --vault-name "kvnaganreactjs1" --name "$SECRET_NAME" --query value -o tsv)
        
        # Mask the secret in logs
        echo "::add-mask::$SECRET_VALUE"
        
        # Add to .env file
        echo "$ENV_NAME=$SECRET_VALUE" >> .env.build
        done
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        build-args-file: .env.build
        tags: |
            naganreactjsacr.azurecr.io/reactjs-sample:latest
            naganreactjsacr.azurecr.io/reactjs-sample:${{ github.sha }}
            naganreactjsacr.azurecr.io/reactjs-sample:${{ github.run_number }}

    - name: Deploy to Azure Container App
      run: |
        az containerapp update \
          --name reactjs-app \
          --resource-group rg-nagan-reactjs \
          --image naganreactjsacr.azurecr.io/reactjs-sample:${{ github.sha }}